# ===========================
# Ultimate Pentesting .zshrc
# ===========================
# ~/.zshrc file for interactive Zsh shells.

# Set options
setopt autocd              # Change directory by typing its name
#setopt correct            # Auto-correct mistakes
setopt interactivecomments # Allow comments in interactive mode
setopt magicequalsubst     # Enable filename expansion for arguments of the form ‘anything=expression’
setopt nonomatch           # Hide error message if there is no match for the pattern
setopt notify              # Report the status of background jobs immediately
setopt numericglobsort     # Sort filenames numerically when it makes sense
setopt promptsubst         # Enable command substitution in prompt

# Word character settings
WORDCHARS=${WORDCHARS//\/} # Don't consider certain characters part of the word

# Hide end-of-line marker
PROMPT_EOL_MARK=""

# Keybindings
bindkey -e                                        # Emacs key bindings
bindkey ' ' magic-space                           # Do history expansion on space
bindkey '^U' backward-kill-line                   # Ctrl + U
bindkey '^[[3;5~' kill-word                       # Ctrl + Supr
bindkey '^[[3~' delete-char                       # Delete
bindkey '^[[1;5C' forward-word                    # Ctrl + ->
bindkey '^[[1;5D' backward-word                   # Ctrl + <-
bindkey '^[[5~' beginning-of-buffer-or-history    # Page Up
bindkey '^[[6~' end-of-buffer-or-history          # Page Down
bindkey '^[[H' beginning-of-line                  # Home
bindkey '^[[F' end-of-line                        # End
bindkey '^[[Z' undo                               # Shift + Tab undo last action

# Enable completion features
autoload -Uz compinit
compinit -d ~/.cache/zcompdump
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true

# History settings
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=2000
setopt hist_expire_dups_first # Delete duplicates first when history size exceeds limit
setopt hist_ignore_dups       # Ignore duplicate commands in history
setopt hist_ignore_space      # Ignore commands that start with space
setopt hist_verify            # Show command with history expansion before executing

# Alias to show complete history
alias history="history 0"

# Configure `time` format
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'

# Set up prompt
configure_prompt() {
    prompt_symbol=㉿
    case "$PROMPT_ALTERNATIVE" in
        twoline)
            PROMPT=$'%F{%(#.blue.green)}┌──(%B%F{%(#.red.blue)}%n'$prompt_symbol$'%m%b%F{%(#.blue.green)})-[%B%F{reset}%~%b%F{%(#.blue.green)}]\n└─%B%(#.%F{red}#.%F{blue}$)%b%F{reset} '
            ;;
        oneline)
            PROMPT=$'%B%F{%(#.red.blue)}%n@%m%b%F{reset}:%B%F{%(#.blue.green)}%~%b%F{reset}%(#.#.$) '
            ;;
    esac
    unset prompt_symbol
}

PROMPT_ALTERNATIVE=twoline
NEWLINE_BEFORE_PROMPT=yes

if [ "$color_prompt" = yes ]; then
    VIRTUAL_ENV_DISABLE_PROMPT=1
    configure_prompt
fi

toggle_oneline_prompt(){
    if [ "$PROMPT_ALTERNATIVE" = oneline ]; then
        PROMPT_ALTERNATIVE=twoline
    else
        PROMPT_ALTERNATIVE=oneline
    fi
    configure_prompt
    zle reset-prompt
}
zle -N toggle_oneline_prompt
bindkey ^P toggle_oneline_prompt

# If this is an xterm, set the title
case "$TERM" in
    xterm*|rxvt*|Eterm|aterm|kterm|gnome*|alacritty)
        TERM_TITLE=$'\e]0;%n@%m: %~\a'
        ;;
esac

precmd() {
    print -Pnr -- "$TERM_TITLE"
    if [ "$NEWLINE_BEFORE_PROMPT" = yes ]; then
        if [ -z "$_NEW_LINE_BEFORE_PROMPT" ]; then
            _NEW_LINE_BEFORE_PROMPT=1
        else
            print ""
        fi
    fi
}

# Enable color support
if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
fi

# Some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# Auto-suggestions
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    . /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#999'
fi

# Command-not-found support
if [ -f /etc/zsh_command_not_found ]; then
    . /etc/zsh_command_not_found
fi

# --- Pentesting Enhancements ---

# Quick alias for sudo execution logging
alias sudopass='echo "Password: $(sudo -nv 2>&1 | grep -oP "(?<=password for ).*(?=: )")"'

# Enumerate system information
alias enuminfo='uname -a; id; whoami; ifconfig; netstat -tulnp'

# Quick networking info
alias netinfo='ip a; ip r; ss -tulwn'

# Quick privilege escalation checks
alias checkprivs='sudo -l; id; getcap -r / 2>/dev/null'

# Quick file permissions check
alias checkperms='find / -perm -4000 -o -perm -2000 -o -perm -6000 2>/dev/null'

# Check writable binaries for exploitation
alias writable_bins='find / -type f -perm -o+w -exec ls -lah {} + 2>/dev/null'

# Alias for running a Python web server (useful for file transfers)
alias pyserve='python3 -m http.server 8080'

# Quick alias to download files with wget
alias wgetquick='wget --no-check-certificate --quiet --show-progress'

# Securely wipe files
alias shredfile='shred -uvzn 5'

# Quickly decode base64
alias b64decode='base64 -d'

# Quickly encode base64
alias b64encode='base64'

# Convert file to hex dump
alias hexview='xxd -c 16 -g 1'

# List active SSH connections
alias sshwatch='watch "netstat -tnpa | grep ssh"'

# Extract compressed files
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2) tar xjf "$1" ;;
            *.tar.gz) tar xzf "$1" ;;
            *.bz2) bunzip2 "$1" ;;
            *.rar) unrar x "$1" ;;
            *.gz) gunzip "$1" ;;
            *.tar) tar xf "$1" ;;
            *.tbz2) tar xjf "$1" ;;
            *.tgz) tar xzf "$1" ;;
            *.zip) unzip "$1" ;;
            *.Z) uncompress "$1" ;;
            *.7z) 7z x "$1" ;;
            *) echo "Unknown file format" ;;
        esac
    else
        echo "File not found!"
    fi
}

# Quick function to identify file types
filetype() {
    file "$1" | cut -d: -f2
}

# Function to search for binaries with SUID bit set
findsuid() {
    find / -perm -u=s -type f 2>/dev/null
}

# Function to list listening ports
listports() {
    netstat -tulnp | grep LISTEN
}

# Fast DNS lookup
alias dnslookup='dig +short'

# Quickly get public IP
alias myip='curl -s ifconfig.me'

# Quickly enumerate running processes
alias psinfo='ps aux --sort=-%mem | head -20'

# Check if a user exists on the system
userexists() {
    id "$1" &>/dev/null && echo "User exists" || echo "User not found"
}

